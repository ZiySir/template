pluginManagement {
	repositories {
		mavenLocal()
		gradlePluginPortal()
	}
	plugins {

		id("io.spring.dependency-management") version "1.1.7"
		id("org.springframework.boot") version "3.3.3"

		def baselineVersion = "6.8.0"
		// baseline support
		id("com.palantir.baseline-idea") version baselineVersion
		id("com.palantir.baseline-config") version baselineVersion
		// baseline 代码规范
		id("com.palantir.baseline-error-prone") version baselineVersion
		id("com.palantir.baseline-checkstyle") version baselineVersion
		id("com.palantir.java-format") version "2.50.0"
		// spotless
		id("com.diffplug.spotless") version "7.0.1"
		// baseline 检查依赖关系
		id("com.palantir.baseline-exact-dependencies") version baselineVersion
		id("com.palantir.baseline-encoding") version baselineVersion
	}
}


rootProject.name = rootDir.name

include("example:demo1")

rootProject.children.each { p ->
	walk(p) { project, name ->
		project.buildFileName = "${name}.gradle"
		if (!project.buildFile.exists()) {
			new File(project.projectDir, "build.gradle").with { buildGradleFile ->
				if (buildGradleFile.exists()) {
					buildGradleFile.renameTo(project.buildFile)
				}
			}
		}
		println "project name: ${project.name}\tbuild file: ${project.buildFileName}"
	}
}

static def walk(ProjectDescriptor project, Closure cb) {
	def projectName = project.name.split(":").last()
	cb.call(project, projectName)
	project.children.each { subProject ->
		walk(subProject, cb)
	}
}