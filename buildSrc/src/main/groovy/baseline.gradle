plugins {
    id 'java'
    id 'java-library'
    id 'com.palantir.baseline-idea'
    // 代码检查插件
    id 'net.ltgt.errorprone'
    id 'com.palantir.baseline-error-prone'
    id 'com.palantir.baseline-checkstyle'

    // 代码自动格式化插件
    id 'com.diffplug.spotless'
    id 'com.palantir.java-format' // palantir风格

    id 'com.palantir.baseline-encoding'
    id 'com.palantir.baseline-exact-dependencies' // 帮助优化依赖关系
}

description = "palantir baseline代码规范化插件"

dependencies {
    errorprone 'com.google.errorprone:error_prone_check_api:2.36.0'

    // 使用更安全的日志记录: https://github.com/palantir/safe-logging
    implementation 'com.palantir.safe-logging:logger'
    implementation 'com.palantir.safe-logging:preconditions'
    testImplementation 'com.palantir.safe-logging:preconditions-assertj'
}

// 代码自动格式化配置.
spotless {
    java {
        lineEndings com.diffplug.spotless.LineEnding.UNIX
        endWithNewline()
        indentWithSpaces 4
        trimTrailingWhitespace()
        custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
    }
    groovyGradle {
        greclipse()
    }
}

tasks.withType(JavaCompile).configureEach(new Action<Task>() {
    public void execute(Task task) {
        // StrictUnusedVariable： 未使用变量
        task.options.errorprone.disable 'StrictUnusedVariable'
    }
})

// 将所有警告转换为错误，进一步强制规范代码
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-Werror']
}
